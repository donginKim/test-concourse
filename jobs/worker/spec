---
name: worker

description: >
  The ground crew registers a Garden worker with the ATC on an interval,
  advertises supported resource types, and cleans up ephemeral containers on
  shutdown.

templates:
  drain.erb: bin/drain
  beacon_ctl.erb: bin/beacon_ctl
  tsa_host_key.pub.erb: config/tsa_host_key.pub
  worker_key.erb: config/worker_key

packages:
  - pid_utils
  - resource_discovery
  - worker
  - worker_version

  # colocate base resources
  - bosh_deployment_resource
  - bosh_io_release_resource
  - bosh_io_stemcell_resource
  - cf_resource
  - docker_image_resource
  - git_resource
  - github_release_resource
  - hg_resource
  - pool_resource
  - s3_resource
  - semver_resource
  - time_resource
  - tracker_resource

consumes:
- name: tsa
  type: tsa
  optional: true
- name: garden
  type: garden
  optional: true
- name: baggageclaim
  type: baggageclaim
  optional: true

properties:
  tsa.host:
    description: |
      IP or DNS address of the TSA server to register with.

      If not specified, the `tsa` link is used.

  tsa.port:
    description: |
      Port of the TSA server to register with.

      Only used when `tsa.host` is also specified. Otherwise the port is
      autodiscovered via the `tsa` link.
    default: 2222

  tsa.host_public_key:
    description: >
      Public key to verify for the TSA server.

      If not specified, the `tsa` link is used.
    example: 'ssh-rsa ...'

  tsa.worker_key:
    type: ssh
    description: |
      SSH key to use when authenticating with the TSA.
    example:
      private_key: |
        -----BEGIN RSA PRIVATE KEY-----
        ...
        -----END RSA PRIVATE KEY-----
      public_key: 'ssh-rsa ...'

  tsa.registration_mode:
    description: |
      The registration 'mode' (direct, or forward), to use when registering the
      worker with the ATC.
      If "forward" is specified, the worker's Baggageclaim and Garden address
      will be forwarded through SSH to the TSA.

      If "direct" is specified, the worker will be registered directly without
      forwarding over SSH.
    default: direct

  garden.address:
    description: |
      Garden server connection address to advertise directly to the TSA.

      If not specified, either the `garden` link is used, or
      the instance's address is advertised if the link is not
      found.

  garden.forward_address:
    description: |
      Garden server connection address to forward through SSH to the TSA.

      If not specified, the Garden server address is registered directly.

  baggageclaim.url:
    description: |
      Baggageclaim server URL to advertise directly to the
      TSA.

      If not specified, either the `baggageclaim` link is
      used.

  baggageclaim.forward_address:
    description: |
      Baggageclaim server connection address to forward through SSH to the TSA.

      If not specified, the Baggageclaim server address is registered directly.

  platform:
    description: |
      Platform to advertise for each worker.
    default: linux

  team:
    description: |
      Register the worker for a single team.

      If not specified, the worker will be shared across all teams.
    default: ""

  tags:
    description: |
      An array of tags to advertise for each worker.
    default: []

  http_proxy_url:
    description: |
      Proxy to use for outgoing http requests from containers.

  https_proxy_url:
    description: |
      Proxy to use for outgoing https requests from containers.

  no_proxy:
    description: |
      A list domains and IPs with optional port for which the proxy should be bypassed, e.g. [localhost, 127.0.0.1, example.com, domain.com:8080]
    default: []

  certs_path:
    description: |
      A path to a directory on the instance to create the resource certificates volume from.
    default: "/etc/ssl/certs"

  additional_resource_types:
    description: |
      Additional resource types supported by the workers in `[{type: string, image: string}]` format.
    default: []

  drain_timeout:
    description: |
      Maximum wait time in Go duration format (1m = 1 minute) for worker drain
      to be finished. Only applies when worker is getting shutdown.

      If not specified, it will be indefinite.

  yeller.api_key:
    description: |
      API key to output errors from Concourse to Yeller.
    default: ""

  yeller.environment_name:
    description: |
      Environment name you wish to group errors under in yeller.
    default: ""
