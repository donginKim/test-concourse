#!/bin/bash

set -e

RUN_DIR=/var/vcap/sys/run/worker
LOG_DIR=/var/vcap/sys/log/worker
PIDFILE=$RUN_DIR/beacon.pid

source /var/vcap/packages/pid_utils/pid_utils.sh

mkdir -p $RUN_DIR
chown -R vcap:vcap $RUN_DIR

mkdir -p $LOG_DIR
chown -R vcap:vcap $LOG_DIR

<%
  require 'json'

  tsa_addrs = nil
  tsa_port = nil

  if_p("tsa.host", "tsa.port") do |host, port|
    tsa_addrs = ["#{host}:#{port}"]
  end

  if tsa_addrs.nil? && tsa_port.nil?
    tsa = link("tsa")
    tsa_port = tsa.p("bind_port")
    tsa_addrs = tsa.instances.collect{|instance| "#{instance.address}:#{tsa_port}"}
  end

  garden_addr = ""

  if_p("garden.address") do |addr|
    garden_addr = addr
  end

  if garden_addr.empty?
    if_link("garden") do |garden|
      instance = garden.instances.find { |i| i.id == spec.id }
      if instance
        garden_addr = "#{instance.address}:#{garden.p("bind_port")}"
      end
    end
  end

  if garden_addr.empty?
    # no property and no link; assume it's colocated
    garden_addr = "#{spec.address}:7777"
  end

  baggageclaim_url = ""

  if_p("baggageclaim.url") do |url|
    baggageclaim_url = url
  end

  if baggageclaim_url.empty?
    if_link("baggageclaim") do |baggageclaim|
      instance = baggageclaim.instances.find { |i| i.id == spec.id }
      if instance
        baggageclaim_url = "http://#{instance.address}:#{baggageclaim.p("bind_port")}"
      end
    end
  end

  name_prefix = spec.id.split("-")[0]
%>

WORKER_KEY=/var/vcap/jobs/worker/config/worker_key
chown vcap:vcap $WORKER_KEY
chmod 0400 $WORKER_KEY

TSA_HOST_KEY=/var/vcap/jobs/worker/config/tsa_host_key.pub
chown vcap:vcap $TSA_HOST_KEY
chmod 0400 $TSA_HOST_KEY

kill_session_siblings_of() {
  pidfile=$1

  if [ -f "$pidfile" ]; then
    pid=$(head -1 "$pidfile")

    session=$(ps -p $pid -o sid=)
    ps -s $session -o pid:1= | xargs kill

    rm -f $pidfile
  else
    echo "Pidfile $pidfile doesn't exist!"
  fi
}

case $1 in

  start)
    pid_guard $PIDFILE "beacon"

    echo $$ > $PIDFILE

    WORKER_VERSION=$(cat /var/vcap/packages/worker_version/version)

    resource_metadata=""
    for filepath in $(ls /var/vcap/packages/*/resource_metadata.json); do
      resource_metadata=$resource_metadata"--resource=$filepath "
    done

    additional_resource_metadata=""
    <% p("additional_resource_types").each_with_index do |resource_type, index| %>
      filepath=$RUN_DIR/<%= index %>
      echo '<%= resource_type.to_json %>' > $filepath
      additional_resource_metadata=$additional_resource_metadata"--resource=$filepath "
    <% end %>

    chpst -u vcap:vcap /var/vcap/packages/worker/bin/worker start \
           --name=<%= name_prefix %>-$(hostname | cut -d '-' -f 2-) \
           --version=$WORKER_VERSION \
           --team=<%= p("team") %> \
           --platform=<%= p("platform") %> \
           <% p("tags").each do |tag| %> \
             --tag=<%= tag %> \
           <% end %> \
           --garden-addr=<%= garden_addr %> \
           --baggageclaim-url=<%= baggageclaim_url %> \
           $resource_metadata \
           $additional_resource_metadata \
           <% if p("certs_path", nil) %> \
             --certs-path=<%= p("certs_path") %> \
           <% end %> \
           <% if p("http_proxy_url", nil) %> \
             --http-proxy=<%= p("http_proxy_url") %> \
           <% end %> \
           <% if p("https_proxy_url", nil) %> \
             --https-proxy=<%= p("https_proxy_url") %> \
           <% end %> \
           <% if p("tsa.registration_mode", nil) %> \
             --registration-mode=<%= p("tsa.registration_mode") %> \
           <% end %> \
           <% if p("no_proxy", nil) %> \
             --no-proxy=<%= p("no_proxy").join(",") %> \
           <% end %> \
           <% tsa_addrs.each do |tsa_addr| %> \
             --tsa-host=<%= tsa_addr %> \
           <% end %> \
           --tsa-public-key=${TSA_HOST_KEY} \
           --tsa-worker-private-key=${WORKER_KEY} \
           <% if p("garden.forward_address", nil) %> \
             --garden-forward-addr=<%= p("garden.forward_address") %> \
             <% if p("baggageclaim.forward_address", nil) %> \
               --baggageclaim-forward-addr=<%= p("baggageclaim.forward_address") %> \
             <% end %> \
           <% end %> \
            1>>$LOG_DIR/beacon.stdout.log \
            2>>$LOG_DIR/beacon.stderr.log || exitstatus=$?

    ;;

  stop)
    kill_session_siblings_of $PIDFILE

    ;;

  *)
    echo "Usage: $0 {start|stop}"

    ;;

esac
